{"version":3,"sources":["components/Note.js","components/Notification.js","components/Footer.js","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","Notification","message","Footer","style","color","fontStyle","fontSize","baseUrl","axios","get","then","response","data","newObject","post","id","put","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","map","key","find","n","changedNote","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","concat","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"mNAaeA,EAXF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACdC,EAAQF,EAAKG,UAAY,qBAAuB,iBAEtD,OACE,wBAAIC,UAAU,QACXJ,EAAKK,QACN,4BAAQC,QAASL,GAAmBC,KCE3BK,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAgB,OAAZA,EACK,KAGF,yBAAKJ,UAAU,SAASI,ICYlBC,EAjBA,WAOb,OACE,yBAAKC,MAPa,CAClBC,MAAO,QACPC,UAAW,SACXC,SAAU,KAKR,6BACA,uG,gBCXAC,EAAU,oDAiBD,EAfA,WAEd,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAa3B,EAVA,SAAAC,GAEd,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ3B,EALA,SAACG,EAAIF,GAEnB,OADgBL,IAAMQ,IAAN,UAAaT,EAAb,YAAwBQ,GAAMF,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCyE3BK,G,MAjFH,WAAO,IAAD,EACSC,mBAAS,IADlB,mBACVC,EADU,KACHC,EADG,OAEaF,mBAAS,IAFtB,mBAEVG,EAFU,KAEDC,EAFC,OAGaJ,oBAAS,GAHtB,mBAGVK,EAHU,KAGDC,EAHC,OAIuBN,mBAAS,MAJhC,mBAIVO,EAJU,KAIIC,EAJJ,KAMjBC,qBAAU,WACTC,IAAqBlB,MAAK,SAAAmB,GACzBT,EAASS,QAER,IAEH,IAoBMC,EAAcP,EAAUJ,EAAQA,EAAMY,QAAO,SAAAtC,GAAI,OAAIA,EAAKG,aA6BhE,OACC,6BACC,qCACA,kBAAC,EAAD,CAAcK,QAASwB,IACvB,6BACC,4BAAQ1B,QAAS,kBAAMyB,GAAYD,KAAnC,QACOA,EAAU,YAAc,QAGhC,4BAnCDO,EAAYE,KAAI,SAAAvC,GAAI,OACnB,kBAAC,EAAD,CACCwC,IAAKxC,EAAKsB,GACVtB,KAAMA,EACNC,iBAAkB,kBA3BM,SAAAqB,GAC1B,IAAMtB,EAAO0B,EAAMe,MAAK,SAAAC,GAAC,OAAIA,EAAEpB,KAAOA,KAChCqB,EAAW,eAAQ3C,EAAR,CAAcG,WAAYH,EAAKG,YAEhDgC,EACSb,EAAIqB,GACX1B,MAAK,SAAA2B,GACLjB,EAASD,EAAMa,KAAI,SAAAvC,GAAI,OAAKA,EAAKsB,KAAOA,EAAKtB,EAAO4C,SAEpDC,OAAM,SAAAC,GACNb,EAAgB,SAAD,OACLjC,EAAKK,QADA,sCAGf0C,YAAW,WACVd,EAAgB,QACd,KACHN,EAASD,EAAMY,QAAO,SAAAI,GAAC,OAAIA,EAAEpB,KAAOA,SAWZ0B,CAAmBhD,EAAKsB,WAgCjD,0BAAM2B,SA5BQ,SAAAC,GACfA,EAAMC,iBACN,IAAMC,EAAa,CAClB/C,QAASuB,EACTyB,MAAM,IAAIC,MAAOC,cACjBpD,UAAWqD,KAAKC,SAAW,IAG5BtB,EAAmBiB,GAAYnC,MAAK,SAAA2B,GACnCjB,EAASD,EAAMgC,OAAOd,IACtBf,EAAW,SAmBV,2BAAO8B,MAAO/B,EAASgC,SAfD,SAAAV,GACxBrB,EAAWqB,EAAMW,OAAOF,UAetB,4BAAQG,KAAK,UAAb,SAGD,kBAAC,EAAD,SC/EHC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.d51cb1ef.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Note = ({ note, toggleImportance }) => {\n  const label = note.important ? \"make not important\" : \"make important\";\n\n  return (\n    <li className=\"note\">\n      {note.content}\n      <button onClick={toggleImportance}>{label}</button>\n    </li>\n  );\n};\n\nexport default Note;\n","import React from \"react\";\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null;\n  }\n\n  return <div className=\"error\">{message}</div>;\n};\n\nexport default Notification;\n","import React from \"react\";\n\nconst Footer = () => {\n  const footerStyle = {\n    color: \"green\",\n    fontStyle: \"italic\",\n    fontSize: 16\n  };\n\n  return (\n    <div style={footerStyle}>\n      <br />\n      <em>\n        Note app, Department of Computer Science, University of Helsinki 2020\n      </em>\n    </div>\n  );\n};\n\nexport default Footer;\n","import axios from 'axios';\nconst baseUrl = 'https://quiet-brook-72688.herokuapp.com/api/notes';\n\nconst getAll = () => {\n\tconst request = axios.get(baseUrl);\n\treturn request.then(response => response.data);\n};\n\nconst create = newObject => {\n\tconst request = axios.post(baseUrl, newObject);\n\treturn request.then(response => response.data);\n};\n\nconst update = (id, newObject) => {\n\tconst request = axios.put(`${baseUrl}/${id}`, newObject);\n\treturn request.then(response => response.data);\n};\n\nexport default {\n\tgetAll: getAll,\n\tcreate: create,\n\tupdate: update\n};\n","import React, { useState, useEffect } from 'react';\nimport Note from './components/Note';\nimport Notification from './components/Notification';\nimport Footer from './components/Footer';\nimport noteService from './services/notes';\nimport './index.css';\n\nconst App = () => {\n\tconst [notes, setNotes] = useState([]);\n\tconst [newNote, setNewNote] = useState('');\n\tconst [showAll, setShowAll] = useState(true);\n\tconst [errorMessage, setErrorMessage] = useState(null);\n\n\tuseEffect(() => {\n\t\tnoteService.getAll().then(initialNotes => {\n\t\t\tsetNotes(initialNotes);\n\t\t});\n\t}, []);\n\n\tconst toggleImportanceOf = id => {\n\t\tconst note = notes.find(n => n.id === id);\n\t\tconst changedNote = { ...note, important: !note.important };\n\n\t\tnoteService\n\t\t\t.update(id, changedNote)\n\t\t\t.then(returnedNote => {\n\t\t\t\tsetNotes(notes.map(note => (note.id !== id ? note : returnedNote)));\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tsetErrorMessage(\n\t\t\t\t\t`Note '${note.content}' was already removed from server`\n\t\t\t\t);\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tsetErrorMessage(null);\n\t\t\t\t}, 3000);\n\t\t\t\tsetNotes(notes.filter(n => n.id !== id));\n\t\t\t});\n\t};\n\n\tconst notesToShow = showAll ? notes : notes.filter(note => note.important);\n\n\tconst rows = () =>\n\t\tnotesToShow.map(note => (\n\t\t\t<Note\n\t\t\t\tkey={note.id}\n\t\t\t\tnote={note}\n\t\t\t\ttoggleImportance={() => toggleImportanceOf(note.id)}\n\t\t\t/>\n\t\t));\n\n\tconst addNote = event => {\n\t\tevent.preventDefault();\n\t\tconst noteObject = {\n\t\t\tcontent: newNote,\n\t\t\tdate: new Date().toISOString(),\n\t\t\timportant: Math.random() > 0.5\n\t\t};\n\n\t\tnoteService.create(noteObject).then(returnedNote => {\n\t\t\tsetNotes(notes.concat(returnedNote));\n\t\t\tsetNewNote('');\n\t\t});\n\t};\n\n\tconst handleNoteCHange = event => {\n\t\tsetNewNote(event.target.value);\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<h1>Notes</h1>\n\t\t\t<Notification message={errorMessage} />\n\t\t\t<div>\n\t\t\t\t<button onClick={() => setShowAll(!showAll)}>\n\t\t\t\t\tshow {showAll ? 'important' : 'all'}\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t<ul>{rows()}</ul>\n\t\t\t<form onSubmit={addNote}>\n\t\t\t\t<input value={newNote} onChange={handleNoteCHange} />\n\t\t\t\t<button type=\"submit\">save</button>\n\t\t\t</form>\n\n\t\t\t<Footer />\n\t\t</div>\n\t);\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}