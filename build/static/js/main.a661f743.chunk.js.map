{"version":3,"sources":["components/Note.js","components/Notification.js","components/Footer.js","components/LoginForm.js","components/Togglable.js","components/NoteForm.js","services/notes.js","services/login.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","Notification","message","Footer","style","color","fontStyle","fontSize","LoginForm","handleLogin","useState","username","setUsername","password","setPassword","onSubmit","event","preventDefault","id","type","value","name","onChange","target","Togglable","React","forwardRef","props","ref","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","buttonLabel","children","displayName","NoteForm","createNote","newNote","setNewNote","Math","random","token","getAll","axios","get","then","response","data","create","newObject","a","config","headers","Authorization","post","update","put","setToken","newToken","login","credentials","App","notes","setNotes","showAll","setShowAll","errorMessage","setErrorMessage","user","setUser","useEffect","noteService","initialNotes","loggedUserJSON","window","localStorage","getItem","JSON","parse","loginService","setItem","stringify","setTimeout","notesToShow","filter","addNote","noteObject","noteFormRef","current","returnedNote","concat","createRef","map","key","find","n","changedNote","catch","error","toggleImportanceOf","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a661f743.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Note = ({ note, toggleImportance }) => {\n  const label = note.important ? \"make not important\" : \"make important\";\n\n  return (\n    <li className=\"note\">\n      {note.content}\n      <button onClick={toggleImportance}>{label}</button>\n    </li>\n  );\n};\n\nexport default Note;\n","import React from \"react\";\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null;\n  }\n\n  return <div className=\"error\">{message}</div>;\n};\n\nexport default Notification;\n","import React from \"react\";\n\nconst Footer = () => {\n  const footerStyle = {\n    color: \"green\",\n    fontStyle: \"italic\",\n    fontSize: 16\n  };\n\n  return (\n    <div style={footerStyle}>\n      <br />\n      <em>\n        Note app, Department of Computer Science, University of Helsinki 2020\n      </em>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nconst LoginForm = ({ handleLogin }) => {\n\tconst [username, setUsername] = useState('')\n\tconst [password, setPassword] = useState('')\n\n\tconst login = (event) => {\n\t\tevent.preventDefault()\n\t\thandleLogin(username, password)\n\t\tsetUsername('')\n\t\tsetPassword('')\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<h2>Login</h2>\n\n\t\t\t<form onSubmit={login}>\n\t\t\t\t<div>\n\t\t\t\t\tusername\n\t\t\t\t\t<input\n\t\t\t\t\t\tid=\"username\"\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tvalue={username}\n\t\t\t\t\t\tname=\"Username\"\n\t\t\t\t\t\tonChange={({ target }) => setUsername(target.value)}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\tpassword\n\t\t\t\t\t<input\n\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\tname=\"Password\"\n\t\t\t\t\t\tonChange={({ target }) => setPassword(target.value)}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<button id=\"login-button\" type=\"submit\">\n\t\t\t\t\tlogin\n\t\t\t\t</button>\n\t\t\t</form>\n\t\t</div>\n\t)\n}\n\nLoginForm.propTypes = {\n\thandleLogin: PropTypes.func.isRequired,\n}\n\nexport default LoginForm\n","import React, { useState, useImperativeHandle } from 'react'\nimport PropTypes from 'prop-types'\n\nconst Togglable = React.forwardRef((props, ref) => {\n\tconst [visible, setVisible] = useState(false)\n\n\tconst hideWhenVisible = { display: visible ? 'none' : '' }\n\tconst showWhenVisible = { display: visible ? '' : 'none' }\n\n\tconst toggleVisibility = () => {\n\t\tsetVisible(!visible)\n\t}\n\n\tuseImperativeHandle(ref, () => {\n\t\treturn {\n\t\t\ttoggleVisibility,\n\t\t}\n\t})\n\n\treturn (\n\t\t<div>\n\t\t\t<div style={hideWhenVisible}>\n\t\t\t\t<button onClick={toggleVisibility}>{props.buttonLabel}</button>\n\t\t\t</div>\n\t\t\t<div style={showWhenVisible} className=\"togglableContent\">\n\t\t\t\t{props.children}\n\t\t\t\t<button onClick={toggleVisibility}>cancel</button>\n\t\t\t</div>\n\t\t</div>\n\t)\n})\n\nTogglable.displayName = 'Togglable'\n\nTogglable.propTypes = {\n\tbuttonLabel: PropTypes.string.isRequired,\n}\n\nexport default Togglable\n","import React, { useState } from 'react'\n\nconst NoteForm = ({ createNote }) => {\n\tconst [newNote, setNewNote] = useState('')\n\n\tconst handleChange = (event) => {\n\t\tsetNewNote(event.target.value)\n\t}\n\n\tconst addNote = (event) => {\n\t\tevent.preventDefault()\n\t\tcreateNote({\n\t\t\tcontent: newNote,\n\t\t\timportant: Math.random() > 0.5,\n\t\t})\n\n\t\tsetNewNote('')\n\t}\n\treturn (\n\t\t<div className=\"formDiv\">\n\t\t\t<h2>Create a new note</h2>\n\n\t\t\t<form onSubmit={addNote}>\n\t\t\t\t<input value={newNote} onChange={handleChange} />\n\t\t\t\t<button type=\"submit\">save</button>\n\t\t\t</form>\n\t\t</div>\n\t)\n}\n\nexport default NoteForm\n","import axios from 'axios'\nconst baseUrl = '/api/notes'\n\nlet token = null\n\nconst setToken = (newToken) => {\n\ttoken = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n\tconst request = axios.get(baseUrl)\n\treturn request.then((response) => response.data)\n}\n\nconst create = async (newObject) => {\n\tconst config = {\n\t\theaders: { Authorization: token },\n\t}\n\n\tconst response = await axios.post(baseUrl, newObject, config)\n\treturn response.data\n}\n\nconst update = (id, newObject) => {\n\tconst request = axios.put(`${baseUrl}/${id}`, newObject)\n\treturn request.then((response) => response.data)\n}\n\nexport default {\n\tgetAll,\n\tcreate,\n\tupdate,\n\tsetToken,\n}\n","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async (credentials) => {\n\tconst response = await axios.post(baseUrl, credentials)\n\treturn response.data\n}\n\nexport default { login }\n","import React, { useState, useEffect } from 'react'\nimport Note from './components/Note'\nimport Notification from './components/Notification'\nimport Footer from './components/Footer'\nimport LoginForm from './components/LoginForm'\nimport Togglable from './components/Togglable'\nimport NoteForm from './components/NoteForm'\nimport noteService from './services/notes'\nimport loginService from './services/login'\nimport './index.css'\n\nconst App = () => {\n\tconst [notes, setNotes] = useState([])\n\tconst [showAll, setShowAll] = useState(true)\n\tconst [errorMessage, setErrorMessage] = useState(null)\n\n\tconst [user, setUser] = useState(null)\n\n\tuseEffect(() => {\n\t\tnoteService.getAll().then((initialNotes) => {\n\t\t\tsetNotes(initialNotes)\n\t\t})\n\t}, [])\n\n\tuseEffect(() => {\n\t\tconst loggedUserJSON = window.localStorage.getItem('loggedNoteappUser')\n\t\tif (loggedUserJSON) {\n\t\t\tconst user = JSON.parse(loggedUserJSON)\n\t\t\tsetUser(user)\n\t\t\tnoteService.setToken(user.token)\n\t\t}\n\t}, [])\n\n\tconst handleLogin = async (username, password) => {\n\t\ttry {\n\t\t\tconst user = await loginService.login({\n\t\t\t\tusername,\n\t\t\t\tpassword,\n\t\t\t})\n\n\t\t\twindow.localStorage.setItem('loggedNoteappUser', JSON.stringify(user))\n\n\t\t\tnoteService.setToken(user.token)\n\t\t\tsetUser(user)\n\t\t} catch (exception) {\n\t\t\tsetErrorMessage('Wrong credentials')\n\t\t\tsetTimeout(() => {\n\t\t\t\tsetErrorMessage(null)\n\t\t\t}, 5000)\n\t\t}\n\t}\n\n\tconst toggleImportanceOf = (id) => {\n\t\tconst note = notes.find((n) => n.id === id)\n\t\tconst changedNote = { ...note, important: !note.important }\n\n\t\tnoteService\n\t\t\t.update(id, changedNote)\n\t\t\t.then((returnedNote) => {\n\t\t\t\tsetNotes(notes.map((note) => (note.id !== id ? note : returnedNote)))\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tsetErrorMessage(\n\t\t\t\t\t`Note '${note.content}' was already removed from server`\n\t\t\t\t)\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tsetErrorMessage(null)\n\t\t\t\t}, 3000)\n\t\t\t\tsetNotes(notes.filter((n) => n.id !== id))\n\t\t\t})\n\t}\n\n\tconst notesToShow = showAll ? notes : notes.filter((note) => note.important)\n\n\tconst rows = () =>\n\t\tnotesToShow.map((note) => (\n\t\t\t<Note\n\t\t\t\tkey={note.id}\n\t\t\t\tnote={note}\n\t\t\t\ttoggleImportance={() => toggleImportanceOf(note.id)}\n\t\t\t/>\n\t\t))\n\n\tconst addNote = (noteObject) => {\n\t\tnoteFormRef.current.toggleVisibility()\n\t\tnoteService.create(noteObject).then((returnedNote) => {\n\t\t\tsetNotes(notes.concat(returnedNote))\n\t\t})\n\t}\n\n\tconst loginForm = () => (\n\t\t<Togglable buttonLabel=\"login\">\n\t\t\t<LoginForm handleLogin={handleLogin} />\n\t\t</Togglable>\n\t)\n\n\tconst noteFormRef = React.createRef()\n\n\tconst noteForm = () => (\n\t\t<Togglable buttonLabel=\"new note\" ref={noteFormRef}>\n\t\t\t<NoteForm createNote={addNote} />\n\t\t</Togglable>\n\t)\n\n\treturn (\n\t\t<div>\n\t\t\t<h1>Notes</h1>\n\n\t\t\t<Notification message={errorMessage} />\n\n\t\t\t{user === null ? (\n\t\t\t\tloginForm()\n\t\t\t) : (\n\t\t\t\t<div>\n\t\t\t\t\t<p>{user.name} logged in</p>\n\t\t\t\t\t{noteForm()}\n\t\t\t\t</div>\n\t\t\t)}\n\n\t\t\t<div>\n\t\t\t\t<button onClick={() => setShowAll(!showAll)}>\n\t\t\t\t\tshow {showAll ? 'important' : 'all'}\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t<ul>{rows()}</ul>\n\n\t\t\t<Footer />\n\t\t</div>\n\t)\n}\n\nexport default App\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}